#!/bin/bash

# Script de instala√ß√£o do POAgent
# Sistema de Gera√ß√£o de PRDs e Features para Carteira de Cust√≥dia Brasileira

set -e  # Parar em caso de erro

echo "üöÄ Iniciando instala√ß√£o do POAgent..."

# Verificar Python
echo "üìã Verificando Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 n√£o encontrado. Por favor, instale Python 3.8+ primeiro."
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
echo "‚úÖ Python $PYTHON_VERSION encontrado"

# Verificar se a vers√£o √© compat√≠vel
python3 -c "
import sys
if sys.version_info < (3, 8):
    print('‚ùå Python 3.8+ √© necess√°rio. Vers√£o atual:', sys.version_info[:2])
    sys.exit(1)
"

# Criar ambiente virtual
echo "üîß Criando ambiente virtual..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "‚úÖ Ambiente virtual criado"
else
    echo "‚úÖ Ambiente virtual j√° existe"
fi

# Ativar ambiente virtual
echo "üîå Ativando ambiente virtual..."
source venv/bin/activate

# Atualizar pip
echo "üì¶ Atualizando pip..."
pip install --upgrade pip

# Instalar depend√™ncias
echo "üìö Instalando depend√™ncias..."
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt
    echo "‚úÖ Depend√™ncias instaladas"
else
    echo "‚ùå Arquivo requirements.txt n√£o encontrado"
    exit 1
fi

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p data/chroma_db
mkdir -p documents
mkdir -p output
mkdir -p logs
echo "‚úÖ Diret√≥rios criados"

# Configurar arquivo .env
echo "‚öôÔ∏è Configurando ambiente..."
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ Arquivo .env criado a partir do .env.example"
        echo "‚ö†Ô∏è  IMPORTANTE: Configure sua OPENAI_API_KEY no arquivo .env"
    else
        echo "‚ùå Arquivo .env.example n√£o encontrado"
        exit 1
    fi
else
    echo "‚úÖ Arquivo .env j√° existe"
fi

# Verificar se a chave da OpenAI est√° configurada
if grep -q "your_openai_api_key_here" .env; then
    echo "‚ö†Ô∏è  ATEN√á√ÉO: Configure sua chave da OpenAI no arquivo .env antes de usar o sistema"
fi

# Inicializar base de dados
echo "üóÑÔ∏è Inicializando base de dados..."
python main.py setup-database || {
    echo "‚ö†Ô∏è  Aviso: N√£o foi poss√≠vel inicializar a base de dados automaticamente"
    echo "   Execute 'python main.py setup-database' ap√≥s configurar a API key"
}

# Tornar main.py execut√°vel
chmod +x main.py

echo ""
echo "üéâ Instala√ß√£o conclu√≠da com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Configure sua OPENAI_API_KEY no arquivo .env"
echo "2. Ative o ambiente virtual: source venv/bin/activate"
echo "3. Execute: python main.py --help para ver os comandos dispon√≠veis"
echo ""
echo "üìñ Exemplos de uso:"
echo "   python main.py upload-document --file-path documento.pdf --file-type pdf"
echo "   python main.py generate-prd --request 'Sistema de cust√≥dia CVM'"
echo "   python main.py generate-features --request 'API de consulta de saldos'"
echo ""
echo "üìö Consulte o README.md para documenta√ß√£o completa"